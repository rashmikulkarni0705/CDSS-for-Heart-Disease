package ID3UI;

import AlgoID3.FileOp;
import AlgoID3.ID3Algo;
import AlgoID3.PatientData;
import AlgoID3.PatientForm;

//import LMC.classification.bayes.InstencelNaiveBayes;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.FileOutputStream;
import java.net.URI;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class JInternalFramePatient extends javax.swing.JInternalFrame {

    ArrayList al = null;
    JInternalFramePatient obj1;

    /** Creates new form JInternalFramePatient */
    public JInternalFramePatient() {
        initComponents();
        obj1 = this;
        refresh();
    }

    public void refresh() {
        try {
            DefaultTableModel md = (DefaultTableModel) jTable1.getModel();
            for (int i = md.getRowCount() - 1; i >= 0; i--) {
                md.removeRow(i);
            }

            al = PatientData.getQueryPatientResultSet();
            for (int i = al.size() - 1; i >= 0; i--) {
                PatientForm st = (PatientForm) al.get(i);

                md.insertRow(0, new String[]{st.getName(), st.getAddress(), st.getContactno()});

            }
        } catch (Exception ex) {
            Logger.getLogger(JInternalFramePatient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Patient");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Address", "ContactNo"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Modify");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Test");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JInternalFramePatientForm JInternalFramePatientFormObj = new JInternalFramePatientForm(this, 0);

        ((JDesktopPane) getParent()).add(JInternalFramePatientFormObj, javax.swing.JDesktopPane.DEFAULT_LAYER);

        JInternalFramePatientFormObj.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.out.println(jTable1.getSelectedRow());
        PatientForm obj = (PatientForm) al.get(jTable1.getSelectedRow());
        JInternalFramePatientForm JInternalFramePatientFormObj = new JInternalFramePatientForm(this, obj.getPatientid());

        ((JDesktopPane) getParent()).add(JInternalFramePatientFormObj, javax.swing.JDesktopPane.DEFAULT_LAYER);

        JInternalFramePatientFormObj.show();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            PatientForm obj = (PatientForm) al.get(jTable1.getSelectedRow());
            PatientData.deletePatient(obj.getPatientid());
            refresh();
        } catch (Exception ex) {
            Logger.getLogger(JInternalFramePatient.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new Thread() {

            @Override
            public void run() {
                try {
                    PatientForm obj = (PatientForm) al.get(jTable1.getSelectedRow());
                    double val[] = new double[]{obj.getVal1(), obj.getVal2(), obj.getVal3(),
                        obj.getVal4(), obj.getVal5(), obj.getVal6(), obj.getVal7(), obj.getVal8(),
                        obj.getVal9(), obj.getVal10(), obj.getVal11(), obj.getVal12(), obj.getVal13()};
                    String da = "";
                //    if (Training.obj.jCheckBox1.isSelected()) {
                        da = ID3Algo.testInst(val);
//                    } else {
//
//                        da = ID3Algo.testInst(val);
//
//                    }

                   // int d1 = (int)Double.parseDouble(da);
                    //if (d1 > 0) {
                    String[] data = new String[]{"NO", "LOW", "AVG", "HIGH", "VHIGH"};
                    JOptionPane.showMessageDialog(obj1, da);
                    Document document = new Document();
                    try {
                        PdfWriter.getInstance(document,
                                new FileOutputStream(obj.getPatientid() + ".pdf"));

                        document.open();

                        PdfPTable table = new PdfPTable(2); // 3 columns.

                        PdfPCell cell1 = new PdfPCell(new Paragraph("Name : "));
                        PdfPCell cell2 = new PdfPCell(new Paragraph(obj.getName()));

                        table.addCell(cell1);
                        table.addCell(cell2);

                        cell1 = new PdfPCell(new Paragraph("Test Result : "));
                        cell2 = new PdfPCell(new Paragraph(da));

                        table.addCell(cell1);
                        table.addCell(cell2);

                        document.add(table);

                        document.close();
                    } catch (Exception e) {
                    }
                    URI uri = null;
                    Desktop desktop = Desktop.getDesktop();
                    uri = new URI(obj.getPatientid() + ".pdf");
                    desktop.browse(uri);
//                    } else {
//                        JOptionPane.showMessageDialog(obj1, "Patient Normal");
//                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    //Logger.getLogger(JInternalFramePatient.class.getName()).log(Level.SEVERE, null, ex);
                }


            }
        }.start();
    }//GEN-LAST:event_jButton5ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
